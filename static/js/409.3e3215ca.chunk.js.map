{"version":3,"file":"static/js/409.3e3215ca.chunk.js","mappings":"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","sources":["components/CalendarTable/CalendarTable.styled.jsx","components/CalendarTable/CalendarTable.jsx","components/MonthCalendarHead/MonthCalendarHead.styled.jsx","components/MonthCalendarHead/MonthCalendarHead.jsx","components/ChoosedMonth/ChoosedMonth.jsx","helpers/breakpoints.styled.jsx","../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/eachDayOfInterval/index.js","../node_modules/date-fns/esm/endOfDay/index.js","../node_modules/date-fns/esm/endOfWeek/index.js","../node_modules/date-fns/esm/getDay/index.js","../node_modules/date-fns/esm/getMonth/index.js","../node_modules/date-fns/esm/isSameDay/index.js","../node_modules/date-fns/esm/startOfDay/index.js","../node_modules/date-fns/esm/startOfMonth/index.js","../node_modules/date-fns/esm/startOfWeek/index.js"],"sourcesContent":["import { between, greaterThan } from 'helpers/breakpoints.styled';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst getTasksColor = p => {\n  const c = p.theme.colors;\n  switch (p.priority) {\n    case 'low':\n      return `color: ${c.primary}; background-color: ${c.taskSecondaryLow};`;\n    case 'medium':\n      return `color: ${c.taskMainMedium}; background-color: ${c.taskSecondaryMedium};`;\n    case 'high':\n      return `color: ${c.taskMainHigh}; background-color: ${c.taskSecondaryHigh};`;\n    default:\n      return `color: ${c.black}; background-color: ${c.secondary};`;\n  }\n};\n\nexport const CalendarWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n\n  height: 640px;\n\n  ${greaterThan(\n    'tablet',\n    `\n  height: 864px;\n    \n`\n  )}\n\n  ${greaterThan(\n    'laptop',\n    `\n    height: 750px;\n    width: 1087px;\n`\n  )}\n`;\n\nexport const TableList = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  margin: 0;\n\n  height: 100%;\n  display: grid;\n  grid-template-columns: repeat(7, minmax(0, 1fr));\n  grid-template-rows: repeat(6, minmax(0, 1fr));\n  grid-gap: 1px;\n  marker: none;\n\n  border-radius: ${p => p.theme.radii.light};\n  border: ${p => `${p.theme.borders.normal} ${p.theme.colors.taskBorderTheme}`};\n  background-color: ${p => p.theme.colors.taskBorderTheme};\n  overflow: hidden;\n`;\nexport const CellLink = styled(Link)`\n  padding: 8px 2px 2px 2px;\n  height: 100%;\n  display: flex;\n  gap: 8px;\n  flex-direction: column;\n  background-color: ${p => p.theme.colors.bgcSecondaryTheme};\n\n  opacity: ${p => (p.issamemonth === 'false' ? '0.7' : 1)};\n\n  &:hover {\n    border: ${p =>\n      `${p.theme.borders.normal} ${p.theme.colors.taskBorderTheme}`};\n  }\n\n  ${greaterThan(\n    'tablet',\n    `\n  padding: 14px 4px 4px 4px;\n`\n  )}\n\n  ${greaterThan(\n    'laptop',\n    `\n  padding: 14px 8px 8px 8px;\n`\n  )}\n`;\n\nexport const RowWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n\n  ${greaterThan(\n    'tablet',\n    `\n  margin-right: 10px;\n`\n  )}\n`;\n\nexport const DayWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 20px;\n  height: 22px;\n\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.16;\n\n  color: ${p =>\n    p.isSameMonth\n      ? p.theme.colors.calendarDayNumbers\n      : p.theme.colors.moreTaskLabel};\n\n  ${greaterThan(\n    'tablet',\n    `\n  width: 26px;\n  height: 26px;\n  font-size: 16px;\n  line-height: 1.12;\n`\n  )}\n`;\n\nexport const CurrentDayWrapper = styled(DayWrapper)`\n  background-color: ${p => p.theme.colors.primary};\n  border-radius: 6px;\n  color: ${p => p.theme.colors.white};\n  /* padding-bottom: 1px; */\n\n  ${greaterThan(\n    'tablet',\n    `\n  border-radius: 8px;\n`\n  )}\n`;\n\nexport const TasksWrapper = styled.div`\n  display: flex;\n  flex-basis: 44px;\n  flex-grow: 1;\n  flex-direction: column;\n  gap: 2px;\n`;\n\nexport const TaskWrapper = styled.button`\n  padding: 0 4px 0 8px;\n  width: 100%;\n  height: 22px;\n  line-height: 1;\n  text-align: start;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  border-radius: 8px;\n  border: none;\n  ${p => getTasksColor(p)};\n  cursor: pointer;\n\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.xxs};\n\n  ${greaterThan(\n    'tablet',\n    `\n  padding: 0 10px 0 12px;\n  height: 26px;\n  font-size: 14px;\n`\n  )}\n\n  ${greaterThan(\n    'laptop',\n    `\n  padding: 0 12px 0 12px;\n`\n  )}\n`;\n\nexport const MoreTasksLabel = styled.div`\n  margin-top: auto;\n\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.xs};\n\n  color: grey;\n\n  ${greaterThan(\n    'tablet',\n    `\n  font-size: 16px;\n`\n  )}\n  ${between(\n    'mobile',\n    'tablet',\n    `\n  margin: auto;\n`\n  )};\n`;\n","import {\n  addDays,\n  eachDayOfInterval,\n  endOfDay,\n  format,\n  getMonth,\n  isSameDay,\n  startOfDay,\n  startOfMonth,\n  startOfWeek,\n} from 'date-fns';\n\nimport {\n  DayWrapper,\n  RowWrapper,\n  CurrentDayWrapper,\n  CalendarWrapper,\n  TasksWrapper,\n  TaskWrapper,\n  MoreTasksLabel,\n  CellLink,\n  TableList,\n} from './CalendarTable.styled';\nimport { useOutletContext } from 'react-router-dom';\n\nexport default function CalendarTable() {\n  const { changeActiveDay, openModal, tasks, activeDate, currentDate } =\n    useOutletContext();\n\n  const currentMonth = getMonth(activeDate);\n  const totalDaysForGrid = 41; // 42 = (0 - 41)\n  const startDay = startOfWeek(startOfMonth(activeDate));\n  const endDay = addDays(startDay, totalDaysForGrid);\n  const visibleDaysArray = eachDayOfInterval({\n    start: startDay,\n    end: endDay,\n  });\n\n  // console.log('tasks', tasks.tasks);\n\n  const isCurrentDay = day => isSameDay(currentDate, day);\n  const getIsSameMonth = day => currentMonth === getMonth(day);\n  const getDayNumber = day => format(day, 'd');\n  const dayForLink = format(activeDate, 'ddMMMMyyyy');\n\n  let filteredTasks = [];\n  const getDayTasks = day => {\n    filteredTasks = tasks?.tasks?.filter(\n      task => task.date >= startOfDay(day) && task.date <= endOfDay(day)\n    );\n    filteredTasks.sort((a, b) => a.date - b.date);\n  };\n\n  const handleClick = (e, item) => {\n    //item = day or task\n    const { nodeName } = e.target;\n    console.log(nodeName);\n\n    if (nodeName === 'BUTTON') {\n      // console.log('task', item);\n      e.stopPropagation();\n      openModal();\n\n      return;\n    }\n    changeActiveDay(0, item);\n  };\n\n  return (\n    <div>\n      <CalendarWrapper>\n        <TableList>\n          {visibleDaysArray.map(day => (\n            <li key={format(day, 'ddMMyyyy')}>\n              <CellLink\n                to={`/calendar/day/${dayForLink}`}\n                onClick={e => handleClick(e, day)}\n                issamemonth={getIsSameMonth(day).toString()}\n              >\n                <RowWrapper>\n                  {isCurrentDay(day) ? (\n                    <CurrentDayWrapper>{getDayNumber(day)}</CurrentDayWrapper>\n                  ) : (\n                    <DayWrapper isSameMonth={getIsSameMonth(day)}>\n                      {getDayNumber(day)}\n                    </DayWrapper>\n                  )}\n                </RowWrapper>\n                <TasksWrapper>\n                  {getDayTasks(day)}\n                  {filteredTasks.slice(0, 2).map(task => (\n                    <TaskWrapper\n                      key={task.id}\n                      priority={task.priority}\n                      onClick={e => handleClick(e, task)}\n                    >\n                      {task.title}\n                    </TaskWrapper>\n                  ))}\n                  {filteredTasks.length > 2 && (\n                    <MoreTasksLabel>\n                      {filteredTasks.length - 2} more..\n                    </MoreTasksLabel>\n                  )}\n                </TasksWrapper>\n              </CellLink>\n            </li>\n          ))}\n        </TableList>\n      </CalendarWrapper>\n    </div>\n  );\n}\n","import styled from 'styled-components';\nimport { greaterThan } from 'helpers/breakpoints.styled';\n\nexport const DaysNamesWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${p => p.theme.space[4 + 1]}px; //15px\n\n  min-height: 50px;\n  max-width: 336px;\n\n  border-radius: ${p => p.theme.radii.light}; //8px;\n  border: ${p => `${p.theme.borders.normal} ${p.theme.colors.taskBorderTheme}`};\n  // 1px solid rgba(220, 227, 229, 0.8);\n\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: ${p => p.theme.fontWeights.semibold};\n  line-height: 1.12;\n\n  background-color: ${p => p.theme.colors.bgcSecondaryTheme};\n  color: ${p => p.theme.colors.calendarDayNameAtMonth};\n\n  ${greaterThan(\n    'tablet',\n    `\n   min-height: 46px;\n   max-width: 704px;\n`\n  )}\n  ${greaterThan(\n    'laptop',\n    `\n  max-width: 1087px;\n`\n  )}\n`;\n\nexport const DayNameWrapper = styled.div`\n  display: flex;\n  flex-grow: 1;\n  justify-content: center;\n\n  color: ${p => (p.isWeekend ? p.theme.colors.primary : 'inherit')};\n`;\n\nexport const DayName = styled.span`\n  display: none;\n\n  ${greaterThan('tablet', `display: block;`)}\n`;\n\nexport const MobileDayName = styled.span`\n  display: block;\n\n  ${greaterThan('tablet', `display: none;`)}\n`;\n","import {\n  eachDayOfInterval,\n  endOfWeek,\n  format,\n  getDay,\n  startOfWeek,\n} from 'date-fns';\nimport {\n  DayName,\n  DayNameWrapper,\n  DaysNamesWrapper,\n  MobileDayName,\n} from './MonthCalendarHead.styled';\nimport { useOutletContext } from 'react-router-dom';\n\nexport default function MonthCalendarHead() {\n  const { currentDate } = useOutletContext();\n  const daysNamesArray = eachDayOfInterval({\n    start: startOfWeek(currentDate),\n    end: endOfWeek(currentDate),\n  });\n\n  const getDayNameMobile = day => format(day, 'eeeee').toUpperCase();\n  const getDayName = day => format(day, 'eee').toUpperCase();\n  const getIsWeekend = day => getDay(day) === 0 || getDay(day) === 6;\n\n  return (\n    <DaysNamesWrapper>\n      {daysNamesArray.map(day => (\n        <DayNameWrapper key={getDayName(day)} isWeekend={getIsWeekend(day)}>\n          <MobileDayName>{getDayNameMobile(day)}</MobileDayName>\n          <DayName>{getDayName(day)}</DayName>\n        </DayNameWrapper>\n      ))}\n    </DaysNamesWrapper>\n  );\n}\n","import CalendarTable from 'components/CalendarTable/CalendarTable';\nimport MonthCalendarHead from 'components/MonthCalendarHead/MonthCalendarHead';\n\nexport default function ChoosedMonth() {\n  return (\n    <div>\n      <MonthCalendarHead />\n      <CalendarTable />\n    </div>\n  );\n}\n","import { css } from 'styled-components';\n\nconst breakpoints = {\n  mobile: 375,\n  tablet: 768,\n  laptop: 1440,\n};\n\nexport const media = Object.keys(breakpoints).reduce((accumulator, label) => {\n  accumulator[label] = (...args) => css`\n    @media (min-width: ${breakpoints[label]}px) {\n      ${css(...args)}\n    }\n  `;\n  return accumulator;\n}, {});\n\nexport const between = (firstBreakpoint, secondBreakpoint, styles) => css`\n  @media (min-width: ${breakpoints[\n      firstBreakpoint\n    ]}px) and (max-width: ${breakpoints[secondBreakpoint] - 1}px) {\n    ${styles}\n  }\n`;\n// ${prop => between(\n//   'md',\n//   'lg',\n//   `background-color: prop.theme.colors.yellow;\n// `\n// )}\n\nexport const greaterThan = (breakpoint, styles) => css`\n  @media (min-width: ${breakpoints[breakpoint]}px) {\n    ${styles}\n  }\n`;\n// ${prop => greaterThan(\n//   'md',\n//   `background-color: prop.theme.colors.yellow;\n// `\n// )}\n\nexport const lesserThan = (breakpoint, styles) => css`\n  @media (max-width: ${breakpoints[breakpoint] - 1}px) {\n    ${styles}\n  }\n`;\n// ${prop => lesserThan(\n//   'md',\n//   `background-color: prop.theme.colors.yellow;\n// `\n// )}\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\n\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  var _options$step;\n\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport default function endOfWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\n\nexport default function getDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}"],"names":["CalendarWrapper","styled","greaterThan","TableList","p","theme","radii","light","borders","normal","colors","taskBorderTheme","CellLink","Link","bgcSecondaryTheme","issamemonth","RowWrapper","DayWrapper","fontWeights","bold","fontSizes","xs","isSameMonth","calendarDayNumbers","moreTaskLabel","CurrentDayWrapper","primary","white","TasksWrapper","TaskWrapper","c","priority","taskSecondaryLow","taskMainMedium","taskSecondaryMedium","taskMainHigh","taskSecondaryHigh","black","secondary","getTasksColor","xxs","MoreTasksLabel","between","CalendarTable","useOutletContext","changeActiveDay","openModal","tasks","activeDate","currentDate","currentMonth","getMonth","startDay","startOfWeek","startOfMonth","endDay","addDays","visibleDaysArray","eachDayOfInterval","start","end","isCurrentDay","day","isSameDay","getIsSameMonth","getDayNumber","format","dayForLink","filteredTasks","getDayTasks","filter","task","date","startOfDay","endOfDay","sort","a","b","handleClick","e","item","nodeName","target","console","log","stopPropagation","map","to","onClick","toString","slice","title","id","length","DaysNamesWrapper","space","m","semibold","calendarDayNameAtMonth","DayNameWrapper","isWeekend","DayName","MobileDayName","MonthCalendarHead","daysNamesArray","endOfWeek","getDayNameMobile","toUpperCase","getDayName","getIsWeekend","getDay","ChoosedMonth","breakpoints","mobile","tablet","laptop","Object","keys","reduce","accumulator","label","css","firstBreakpoint","secondBreakpoint","styles","breakpoint","lesserThan","dirtyDate","dirtyAmount","requiredArgs","arguments","toDate","amount","toInteger","isNaN","Date","NaN","setDate","getDate","dirtyInterval","options","_options$step","interval","startDate","endDate","endTime","getTime","RangeError","dates","setHours","step","Number","push","_ref","_ref2","_ref3","_options$weekStartsOn","_options$locale","_options$locale$optio","_defaultOptions$local","_defaultOptions$local2","defaultOptions","getDefaultOptions","weekStartsOn","locale","diff","month","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","dateRightStartOfDay"],"sourceRoot":""}